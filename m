Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 6514C9FDF9D
	for <lists+qemu-devel@lfdr.de>; Sun, 29 Dec 2024 16:17:26 +0100 (CET)
Received: from localhost ([::1] helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces@nongnu.org>)
	id 1tRv1D-00008n-Sn; Sun, 29 Dec 2024 10:15:51 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10])
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <balaton@eik.bme.hu>)
 id 1tRv1B-00008Y-UP; Sun, 29 Dec 2024 10:15:49 -0500
Received: from zero.eik.bme.hu ([2001:738:2001:2001::2001])
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <balaton@eik.bme.hu>)
 id 1tRv1A-0007yS-46; Sun, 29 Dec 2024 10:15:49 -0500
Received: from zero.eik.bme.hu (localhost [127.0.0.1])
 by zero.eik.bme.hu (Postfix) with ESMTP id E14484E600F;
 Sun, 29 Dec 2024 16:15:37 +0100 (CET)
X-Virus-Scanned: amavisd-new at eik.bme.hu
Received: from zero.eik.bme.hu ([127.0.0.1])
 by zero.eik.bme.hu (zero.eik.bme.hu [127.0.0.1]) (amavisd-new, port 10028)
 with ESMTP id RW1WeoEG9Y40; Sun, 29 Dec 2024 16:15:35 +0100 (CET)
Received: by zero.eik.bme.hu (Postfix, from userid 432)
 id BE92A4E600E; Sun, 29 Dec 2024 16:15:35 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
 by zero.eik.bme.hu (Postfix) with ESMTP id BCF3A746F60;
 Sun, 29 Dec 2024 16:15:35 +0100 (CET)
Date: Sun, 29 Dec 2024 16:15:35 +0100 (CET)
From: BALATON Zoltan <balaton@eik.bme.hu>
To: Jiaxun Yang <jiaxun.yang@flygoat.com>
cc: qemu-devel@nongnu.org, Laurent Vivier <laurent@vivier.eu>, 
 Richard Henderson <richard.henderson@linaro.org>, qemu-stable@nongnu.org
Subject: Re: [PATCH v2] target/m68k: Handle EXCP_SEMIHOSTING for m68k class CPU
In-Reply-To: <20241229-m68k-semihosting-v2-1-8a08b2d199a5@flygoat.com>
Message-ID: <4e51180d-9f2a-c778-13b7-5130ad4d660c@eik.bme.hu>
References: <20241229-m68k-semihosting-v2-1-8a08b2d199a5@flygoat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII; format=flowed
Received-SPF: pass client-ip=2001:738:2001:2001::2001;
 envelope-from=balaton@eik.bme.hu; helo=zero.eik.bme.hu
X-Spam_score_int: -18
X-Spam_score: -1.9
X-Spam_bar: -
X-Spam_report: (-1.9 / 5.0 requ) BAYES_00=-1.9, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org

On Sun, 29 Dec 2024, Jiaxun Yang wrote:
> EXCP_SEMIHOSTING can be generated by m68k class CPU with
> HALT instruction, but it is never handled properly and cause
> guest fall into deadlock.
>
> Moving EXCE_SEMIHOSTING handling code to common do_interrupt_all
> routine to ensure it's handled for both CPU classes.
>
> Fixes: f161e723fdfd ("target/m68k: Perform the semihosting test during translate")
> Cc: qemu-stable@nongnu.org
> Signed-off-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
> ---
> Changes in v2:
> - hoist both calls to do_interrupt_all (Richard)
> - Link to v1: https://lore.kernel.org/r/20241229-m68k-semihosting-v1-1-db131e2b5212@flygoat.com
> ---
> target/m68k/op_helper.c | 12 +++++++++---
> 1 file changed, 9 insertions(+), 3 deletions(-)
>
> diff --git a/target/m68k/op_helper.c b/target/m68k/op_helper.c
> index 15bad5dd46518c6e86b6273d4a2b26b3b6f991de..9dd76f540b4871d3d0ab0e95747c85434e5d677d 100644
> --- a/target/m68k/op_helper.c
> +++ b/target/m68k/op_helper.c
> @@ -202,9 +202,6 @@ static void cf_interrupt_all(CPUM68KState *env, int is_hw)
>             /* Return from an exception.  */
>             cf_rte(env);
>             return;
> -        case EXCP_SEMIHOSTING:
> -            do_m68k_semihosting(env, env->dregs[0]);
> -            return;
>         }
>     }
>
> @@ -422,6 +419,15 @@ static void m68k_interrupt_all(CPUM68KState *env, int is_hw)
>
> static void do_interrupt_all(CPUM68KState *env, int is_hw)
> {
> +    CPUState *cs = env_cpu(env);

This could be within the if block if not needed elsewhere.

> +
> +    if (!is_hw) {
> +        switch (cs->exception_index) {
> +        case EXCP_SEMIHOSTING:
> +            do_m68k_semihosting(env, env->dregs[0]);
> +            return;

Also why use switch for a single case? Why not write

if (!is_hw && cs->exception_index == EXCP_SEMIHOSTING)

instead?

Regards,
BALATON Zoltan

> +        }
> +    }
>     if (m68k_feature(env, M68K_FEATURE_M68K)) {
>         m68k_interrupt_all(env, is_hw);
>         return;
>
> ---
> base-commit: 2b7a80e07a29074530a0ebc8005a418ee07b1faf
> change-id: 20241229-m68k-semihosting-2c49c86d3e3c
>
> Best regards,
>

