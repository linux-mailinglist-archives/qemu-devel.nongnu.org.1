Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 077F8992958
	for <lists+qemu-devel@lfdr.de>; Mon,  7 Oct 2024 12:38:19 +0200 (CEST)
Received: from localhost ([::1] helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces@nongnu.org>)
	id 1sxl7H-0003CN-1O; Mon, 07 Oct 2024 06:37:27 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10])
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <peter.maydell@linaro.org>)
 id 1sxl75-00039m-J4
 for qemu-devel@nongnu.org; Mon, 07 Oct 2024 06:37:16 -0400
Received: from mail-lj1-x234.google.com ([2a00:1450:4864:20::234])
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128)
 (Exim 4.90_1) (envelope-from <peter.maydell@linaro.org>)
 id 1sxl73-0002m3-SO
 for qemu-devel@nongnu.org; Mon, 07 Oct 2024 06:37:15 -0400
Received: by mail-lj1-x234.google.com with SMTP id
 38308e7fff4ca-2fabfc06de3so44998061fa.1
 for <qemu-devel@nongnu.org>; Mon, 07 Oct 2024 03:37:13 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=linaro.org; s=google; t=1728297431; x=1728902231; darn=nongnu.org;
 h=cc:to:subject:message-id:date:from:in-reply-to:references
 :mime-version:from:to:cc:subject:date:message-id:reply-to;
 bh=ngPWRvFSjCMt+74SoKPh5f+HvsBf1msKQnpxsK8zLbs=;
 b=l0JP8x1mxS3jfi9tuaogunYMxBts1dq1mYb0jueCQPq1uPydUKlJkXHEwniU2/UJDr
 exj15SQ3MMA3IpdgNBbs4q/oM7hq9v0Hg3jEFTAza7eSeKJmH0AcbvlCH/flSgg5F7Ph
 QBSHyo0Ax+SvGZ6ZA3owUgTn76fiuzzfSay7wBTxxTjLpMWiLnUd3x2tswNrUDpyB8OG
 OHHUKA8YKxaV8WDca+5W3w7/7ldiNb4Dw86TOSTlgoZj0XCNYSt8DRNnVw7WcabSmkEw
 ZKFzGxyRtbsEzH23RnHNVW6kNUcRGcvS//QywdRbczLWVOw9cuBO+86MEXQsel4wHrOj
 Q4EA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20230601; t=1728297431; x=1728902231;
 h=cc:to:subject:message-id:date:from:in-reply-to:references
 :mime-version:x-gm-message-state:from:to:cc:subject:date:message-id
 :reply-to;
 bh=ngPWRvFSjCMt+74SoKPh5f+HvsBf1msKQnpxsK8zLbs=;
 b=wa8Yv5EFY9OIt8K3EKqRyrQikeItROCr564SpYpZl8Ql8FCgz6vPneWRi0NJQGgMLF
 pHA2PkesvjevoPXdhsnJHGdS8xTG6udcyWHwFF4nd24ntAqaBh7mbztsXiHAkCpNBiQs
 RW0qSwqK+iMkv6s3SzifQ2LUazBNAmIWaV4y6V+jr8i6BkOAUBvxoWaR4rRIsJgkJvJ0
 QXaK2shaK0RLEbtgtAeprMAEmoQ+PNHBqLglLdT1mxssDd9H05nAlIdR/3mLfFT6Sadg
 Y2J37czboZ+xuarFdkRmitu0PBDP2W5XTm3qlMn1OJh0/hhTWLnTlhGiP8ZixgXu/Sw0
 Q46A==
X-Gm-Message-State: AOJu0YxbbYIP84uzzqa/6W36WDDaOA8wPMml62Rm0M5iGNtowTKcdw4b
 sIqgMst4MFUC3SGyI4YfrUxoiL6Rix6MeRWok0Zfx+UvAUTD5Uu4tibxQXWltvP+b48n3DU/Lqw
 m2/1XLugSxoaOxL9Fuw84nTl8da2GHfwJBc0GHg==
X-Google-Smtp-Source: AGHT+IET1Dv9yDJgZGasEKqfv1tZ/g91Bp2R/MxxEdBiaBFlbU6jnYnUvrXRfeQsL3EXMRjVEt4Ue7YGf9VuSeLtgWM=
X-Received: by 2002:a2e:a9a5:0:b0:2fb:b8a:7abb with SMTP id
 38308e7fff4ca-2fb0b8a7b17mr6739151fa.21.1728297430629; Mon, 07 Oct 2024
 03:37:10 -0700 (PDT)
MIME-Version: 1.0
References: <20241007101313.3900-1-shentey@gmail.com>
In-Reply-To: <20241007101313.3900-1-shentey@gmail.com>
From: Peter Maydell <peter.maydell@linaro.org>
Date: Mon, 7 Oct 2024 11:36:59 +0100
Message-ID: <CAFEAcA-d0jcDiJASmvS5S2jWUijUGuk5Vu7QT8wrD+HKUgEJqQ@mail.gmail.com>
Subject: Re: [PATCH] net/tap-win32: Fix gcc 14 format truncation errors
To: Bernhard Beschow <shentey@gmail.com>
Cc: qemu-devel@nongnu.org, Jason Wang <jasowang@redhat.com>, 
 Stefan Weil <sw@weilnetz.de>
Content-Type: text/plain; charset="UTF-8"
Received-SPF: pass client-ip=2a00:1450:4864:20::234;
 envelope-from=peter.maydell@linaro.org; helo=mail-lj1-x234.google.com
X-Spam_score_int: -20
X-Spam_score: -2.1
X-Spam_bar: --
X-Spam_report: (-2.1 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1,
 RCVD_IN_DNSWL_NONE=-0.0001, SPF_HELO_NONE=0.001,
 SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org

On Mon, 7 Oct 2024 at 11:14, Bernhard Beschow <shentey@gmail.com> wrote:
>
> The patch fixes the following errors generated by GCC 14.2:
>
> ../src/net/tap-win32.c:343:19: error: '%s' directive output may be truncated writing up to 255 bytes into a region of size 176 [-Werror=format-truncation=]
>   343 |              "%s\\%s\\Connection",
>       |                   ^~
>   344 |              NETWORK_CONNECTIONS_KEY, enum_name);
>       |                                       ~~~~~~~~~
>
> ../src/net/tap-win32.c:341:9: note: 'snprintf' output between 92 and 347 bytes into a destination of size 256
>   341 |         snprintf(connection_string,
>       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
>   342 |              sizeof(connection_string),
>       |              ~~~~~~~~~~~~~~~~~~~~~~~~~~
>   343 |              "%s\\%s\\Connection",
>       |              ~~~~~~~~~~~~~~~~~~~~~
>   344 |              NETWORK_CONNECTIONS_KEY, enum_name);
>       |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>
> ../src/net/tap-win32.c:242:58: error: '%s' directive output may be truncated writing up to 255 bytes into a region of size 178 [-Werror=format-truncation=]
>   242 |         snprintf (unit_string, sizeof(unit_string), "%s\\%s",
>       |                                                          ^~
>   243 |                   ADAPTER_KEY, enum_name);
>       |                                ~~~~~~~~~
>
> ../src/net/tap-win32.c:242:9: note: 'snprintf' output between 79 and 334 bytes into a destination of size 256
>   242 |         snprintf (unit_string, sizeof(unit_string), "%s\\%s",
>       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>   243 |                   ADAPTER_KEY, enum_name);
>       |                   ~~~~~~~~~~~~~~~~~~~~~~~
>
> ../src/net/tap-win32.c:620:52: error: '%s' directive output may be truncated writing up to 255 bytes into a region of size 245 [-Werror=format-truncation=]
>   620 |     snprintf (device_path, sizeof(device_path), "%s%s%s",
>       |                                                    ^~
>   621 |               USERMODEDEVICEDIR,
>   622 |               device_guid,
>       |               ~~~~~~~~~~~
> ../src/net/tap-win32.c:620:5: note: 'snprintf' output between 16 and 271 bytes into a destination of size 256
>   620 |     snprintf (device_path, sizeof(device_path), "%s%s%s",
>       |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>   621 |               USERMODEDEVICEDIR,
>       |               ~~~~~~~~~~~~~~~~~~
>   622 |               device_guid,
>       |               ~~~~~~~~~~~~
>   623 |               TAPSUFFIX);
>       |               ~~~~~~~~~~
>
> Signed-off-by: Bernhard Beschow <shentey@gmail.com>

Resolves: https://gitlab.com/qemu-project/qemu/-/issues/2607
Probably also worth
Cc: qemu-stable@nongnu.org

> ---
>  net/tap-win32.c | 6 +++---
>  1 file changed, 3 insertions(+), 3 deletions(-)
>
> diff --git a/net/tap-win32.c b/net/tap-win32.c
> index 7edbd71633..4a4625af2b 100644
> --- a/net/tap-win32.c
> +++ b/net/tap-win32.c
> @@ -214,7 +214,7 @@ static int is_tap_win32_dev(const char *guid)
>
>      for (;;) {
>          char enum_name[256];
> -        char unit_string[256];
> +        char unit_string[512];
>          HKEY unit_key;
>          char component_id_string[] = "ComponentId";
>          char component_id[256];
> @@ -315,7 +315,7 @@ static int get_device_guid(
>      while (!stop)
>      {
>          char enum_name[256];
> -        char connection_string[256];
> +        char connection_string[512];
>          HKEY connection_key;
>          char name_data[256];
>          DWORD name_type;
> @@ -595,7 +595,7 @@ static void tap_win32_free_buffer(tap_win32_overlapped_t *overlapped,
>  static int tap_win32_open(tap_win32_overlapped_t **phandle,
>                            const char *preferred_name)
>  {
> -    char device_path[256];
> +    char device_path[512];
>      char device_guid[0x100];
>      int rc;
>      HANDLE handle;

Rather than just increasing the array sizes, I think we
should use g_autofree and g_strdup_printf(), like:

       g_autofree char* unit_string = NULL;

       [...]
       unit_string = g_strdup_printf("%s\\%s", ADAPTER_KEY, enum_name);

       (then no need for an explicit free)

All this only happens once at open, so we can certainly
happily take the cost of memory allocation, and it saves
us wondering about whether there's actually a maximum
limit on these string values. (Looking at the MS documentation,
I think registry keys have a limit of 255 chars, but
values are 16383 chars, so 512 would be more than needed
for a key and less than the theoretical maximum for a value.)

thanks
-- PMM

