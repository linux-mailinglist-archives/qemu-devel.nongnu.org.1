Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id CE02C762119
	for <lists+qemu-devel@lfdr.de>; Tue, 25 Jul 2023 20:14:02 +0200 (CEST)
Received: from localhost ([::1] helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces@nongnu.org>)
	id 1qOMXd-0002lJ-Co; Tue, 25 Jul 2023 14:13:49 -0400
Received: from eggs.gnu.org ([2001:470:142:3::10])
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <mail@maciej.szmigiero.name>)
 id 1qOMXY-0002ke-BP
 for qemu-devel@nongnu.org; Tue, 25 Jul 2023 14:13:45 -0400
Received: from vps-vb.mhejs.net ([37.28.154.113])
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <mail@maciej.szmigiero.name>)
 id 1qOMXW-0003Jc-AM
 for qemu-devel@nongnu.org; Tue, 25 Jul 2023 14:13:43 -0400
Received: from MUA by vps-vb.mhejs.net with esmtps (TLS1.2) tls
 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 (Exim 4.94.2)
 (envelope-from <mail@maciej.szmigiero.name>)
 id 1qOMXO-0004aR-UM; Tue, 25 Jul 2023 20:13:34 +0200
Message-ID: <a9744c8b-a98e-dcba-88f8-48df73f06831@maciej.szmigiero.name>
Date: Tue, 25 Jul 2023 20:13:29 +0200
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.12.0
Content-Language: en-US, pl-PL
To: Markus Armbruster <armbru@redhat.com>
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 Richard Henderson <richard.henderson@linaro.org>,
 Eduardo Habkost <eduardo@habkost.net>, David Hildenbrand <david@redhat.com>,
 "Michael S . Tsirkin" <mst@redhat.com>,
 Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
 =?UTF-8?Q?Alex_Benn=c3=a9e?= <alex.bennee@linaro.org>,
 Thomas Huth <thuth@redhat.com>,
 =?UTF-8?Q?Marc-Andr=c3=a9_Lureau?= <marcandre.lureau@redhat.com>,
 =?UTF-8?Q?Daniel_P=2e_Berrang=c3=a9?= <berrange@redhat.com>,
 =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@linaro.org>,
 Eric Blake <eblake@redhat.com>, qemu-devel@nongnu.org
References: <cover.1689786474.git.maciej.szmigiero@oracle.com>
 <22d53a9cc8756bc39b5d951436dc276fa2c665cc.1689786474.git.maciej.szmigiero@oracle.com>
 <87fs5cifif.fsf@pond.sub.org>
From: "Maciej S. Szmigiero" <mail@maciej.szmigiero.name>
Subject: Re: [PATCH v6 5/6] qapi: Add HV_BALLOON_STATUS_REPORT event
In-Reply-To: <87fs5cifif.fsf@pond.sub.org>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Received-SPF: pass client-ip=37.28.154.113;
 envelope-from=mail@maciej.szmigiero.name; helo=vps-vb.mhejs.net
X-Spam_score_int: -19
X-Spam_score: -2.0
X-Spam_bar: --
X-Spam_report: (-2.0 / 5.0 requ) BAYES_00=-1.9, NICE_REPLY_A=-0.091,
 SPF_HELO_NONE=0.001, SPF_PASS=-0.001,
 T_SCC_BODY_TEXT_LINE=-0.01 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org

On 25.07.2023 10:04, Markus Armbruster wrote:
> "Maciej S. Szmigiero" <mail@maciej.szmigiero.name> writes:
> 
>> From: "Maciej S. Szmigiero" <maciej.szmigiero@oracle.com>
>>
>> Used by the hv-balloon driver for (optional) guest memory status reports.
> 
> Inhowfar optional? What enables / triggers it?

They are enabled by "status-report=on" device property, hence they don't
need to be enabled if unwanted.

As you have written below, each status report is generated by the guest
sending a DM_STATUS_REPORT message (which guests do periodically).

> 
> Use case for the event?

To monitor memory state in the guest, for example for some QEMU
auto-ballooning controller.

> Could a status event make sense for other balloon drivers as well?

virtio-balloon has some guest memory stats support, too, but
with important differences, because in virtio-balloon:
1) Stats retrieval is driven by the QEMU process (essentially
polling the guest),

2) There's no notification mechanism for QEMU controller to know
that new stats have arrived from the guest,

3) The list of available individual stats is not constant,
rather it's an array of (TAG, VALUE) pairs.

>> Signed-off-by: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>
>> ---
>>   qapi/machine.json | 25 +++++++++++++++++++++++++
>>   1 file changed, 25 insertions(+)
>>
>> diff --git a/qapi/machine.json b/qapi/machine.json
>> index 5ede977cf2bc..9649616b9ed2 100644
>> --- a/qapi/machine.json
>> +++ b/qapi/machine.json
>> @@ -1113,6 +1113,31 @@
>>   { 'event': 'BALLOON_CHANGE',
>>     'data': { 'actual': 'int' } }
>>   
>> +##
>> +# @HV_BALLOON_STATUS_REPORT:
>> +#
>> +# Emitted when the hv-balloon driver receives a "STATUS" message from
>> +# the guest.
> 
> Aha, the event is triggered by the guest.  It must therefore be
> rate-limited, just like BALLOON_CHANGE.  To do that, add it to
> monitor_qapi_event_conf[] in monitor/monitor.c, and document it as noted
> below.

Ack.

>> +#
>> +# @commited: the amount of memory in use inside the guest plus the amount
>> +#            of the memory unusable inside the guest (ballooned out,
>> +#            offline, etc.)
>> +#
>> +# @available: the amount of the memory inside the guest available for new
>> +#             allocations ("free")
> 
> Spelling: committed.  Remember to update the example, too.

Ack.

> Please format like
> 
> # @committed: the amount of memory in use inside the guest plus the
> #     amount of the memory unusable inside the guest (ballooned out,
> #     offline, etc.)
> #
> # @available: the amount of the memory inside the guest available for
> #     new allocations ("free")
> 
> to blend in with recent commit a937b6aa739 (qapi: Reformat doc comments
> to conform to current conventions).

Ack.

>> +#
> 
> To document rate-limiting, add:
> 
>     # Note: this event is rate-limited.
>     #

Ack.

>> +# Since: TBD
>> +#
>> +# Example:
>> +#
>> +# <- { "event": "HV_BALLOON_STATUS_REPORT",
>> +#      "data": { "commited": 816640000, "available": 3333054464 },
>> +#      "timestamp": { "seconds": 1600295492, "microseconds": 661044 } }
>> +#
>> +##
>> +{ 'event': 'HV_BALLOON_STATUS_REPORT',
>> +  'data': { 'commited': 'size', 'available': 'size' } }
>> +
>>   ##
>>   # @MemoryInfo:
>>   #
> 
> An event is commonly paired with a query command, so that QMP clients
> can resynchronize state after missing events, e.g. when reconnecting
> after a client restart.
> 
> query-balloon isn't such a query: it returns less than the event.
> 
> If a paired query doesn't make sense, explain why.
> 

Will add a query command that returns the last STATUS
event data.

Thanks,
Maciej


