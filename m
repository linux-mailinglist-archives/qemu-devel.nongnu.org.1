Return-Path: <qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org>
X-Original-To: lists+qemu-devel@lfdr.de
Delivered-To: lists+qemu-devel@lfdr.de
Received: from lists.gnu.org (lists.gnu.org [209.51.188.17])
	by mail.lfdr.de (Postfix) with ESMTPS id 4BF999F0371
	for <lists+qemu-devel@lfdr.de>; Fri, 13 Dec 2024 05:20:17 +0100 (CET)
Received: from localhost ([::1] helo=lists1p.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.90_1)
	(envelope-from <qemu-devel-bounces@nongnu.org>)
	id 1tLx8s-0006bu-07; Thu, 12 Dec 2024 23:19:06 -0500
Received: from eggs.gnu.org ([2001:470:142:3::10])
 by lists.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <brian.cain@oss.qualcomm.com>)
 id 1tLx8o-0006aB-G6
 for qemu-devel@nongnu.org; Thu, 12 Dec 2024 23:19:02 -0500
Received: from mx0b-0031df01.pphosted.com ([205.220.180.131])
 by eggs.gnu.org with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.90_1) (envelope-from <brian.cain@oss.qualcomm.com>)
 id 1tLx8m-00082v-1W
 for qemu-devel@nongnu.org; Thu, 12 Dec 2024 23:19:02 -0500
Received: from pps.filterd (m0279873.ppops.net [127.0.0.1])
 by mx0a-0031df01.pphosted.com (8.18.1.2/8.18.1.2) with ESMTP id 4BCI0ECZ029980
 for <qemu-devel@nongnu.org>; Fri, 13 Dec 2024 04:18:59 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=qualcomm.com; h=
 cc:content-transfer-encoding:content-type:date:from:in-reply-to
 :message-id:mime-version:references:subject:to; s=qcppdkim1; bh=
 jFN2KrPddaWoK465RuaqilrI8aTRieIcfTQH9VOUXT4=; b=O5qEA8/XZ4+Prhwv
 2kJIXN3IAzfqMLZswxpqQ53fyFcfPbJN2wy+B1D15TuPpf0RNI9G4vEeA1vzvgOG
 cQ/GSo3+9/DqCZxW1nWmodK41nWmdJtdhss5caAEqea2SAAf8tTWfJIeECR45ktD
 rWvTvW0wWpjjd6eKfCy5JRFKlhgQ/sLcmemEisYhQ97MInlZihKbzJ/E4GWBM5tE
 JeCiZP22WJKVdDznso+yrfoRt3cvsgLMe7GfvdBbSyoAlsqWfXK/NXttBNMRm7Fe
 Wew48Lg7Al5jIekjp4CEWDeSdHxqZREQU1BirUeLWMGscduFcDdWoUkbbiFk3G7+
 y+T5zg==
Received: from mail-pf1-f197.google.com (mail-pf1-f197.google.com
 [209.85.210.197])
 by mx0a-0031df01.pphosted.com (PPS) with ESMTPS id 43dxw4ddyt-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128 verify=NOT)
 for <qemu-devel@nongnu.org>; Fri, 13 Dec 2024 04:18:58 +0000 (GMT)
Received: by mail-pf1-f197.google.com with SMTP id
 d2e1a72fcca58-725eaaf8914so1773305b3a.1
 for <qemu-devel@nongnu.org>; Thu, 12 Dec 2024 20:18:58 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20230601; t=1734063537; x=1734668337;
 h=content-transfer-encoding:mime-version:references:in-reply-to
 :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
 :subject:date:message-id:reply-to;
 bh=jFN2KrPddaWoK465RuaqilrI8aTRieIcfTQH9VOUXT4=;
 b=W5W/c1MDZLM4SSqOjYqHVEqD86eaMx/9b6KGoBl8Ie8Te8fuAWYVND/zrdmq13ne9o
 Qi26fSfxYCag4ADLa/+MTlKKjcquT0Hp29qyj/ogu7gIjQ873uk4KewalrGIRKB4y/om
 p598bfR8cGeBX6NwuPZ/uwMs9Jyu9EZN6J9FHf5H6F6/Qlwam1uov7Yj+4F59DIEb729
 oq46kV0wo7ixMCfJqHe93UJ/vtRkGQzQ0GFv5Jj65ZA05qd3Ll6Hlu1Ww+5FD1gvixyS
 BfHmILGQzIYzaFPvV//dXRd6HJvcR1xDplTB9fPhSQbaHSrqmEsgcddvDEu1IDRyZqoU
 WUzQ==
X-Gm-Message-State: AOJu0YzQxEwbUvMZVFlSiL0Gwe2VngrCdR51F/I6Zl4sdyqgJ8iUD330
 JNkXXCZ2yw8QixmjDQde7hiVzMDB7E5ae+TZ2sKeOeZk+ZUgz1dO59/6RbHe/3WEF+Ez5uqkdv2
 0ECNoiomSGzXneymd3JEwELiztc/Q2rSZ6+JneSSvuBEQactBhrHnc/PChfiSMw==
X-Gm-Gg: ASbGnct6mYyAKDAxZICckI40BA/tajKbMerr05dV8mGb/sGCjnIu4tcskmrMzTdg4jW
 Sd6mcWzjG8pz6tytm5wmC/3U00mkSf0cVtNIkFHJrYJELyFFGjD0gjAj2btc0I2mp8CHDAnh16x
 msbPjnr4ZYNgola/cDLcIK2ufxCgwJejP7cmYMsZ5veEdJf3MsGKg0GHjVoI6B79z6+O69l3Ir7
 zxV5Ssr3+NoCtZfMHoECk7Xjb0ucU6n2nHqXtaLnvu6tMiCGapUsyNCZQmFsmP5yUoBXV/4DG8G
 4c+Jj2j5hIIs8cyJ+/WDcCrm1lUQRg==
X-Received: by 2002:a05:6a00:4f89:b0:725:eb85:f7ef with SMTP id
 d2e1a72fcca58-7290c1b290bmr1913519b3a.14.1734063536980; 
 Thu, 12 Dec 2024 20:18:56 -0800 (PST)
X-Google-Smtp-Source: AGHT+IHH+iGQP0b5ao7QudoB8228qKitYfn2o2qkTNgFM9T7yw/nQBFGRZIjEDLkoLIr7F+QMxNKdw==
X-Received: by 2002:a05:6a00:4f89:b0:725:eb85:f7ef with SMTP id
 d2e1a72fcca58-7290c1b290bmr1913479b3a.14.1734063536535; 
 Thu, 12 Dec 2024 20:18:56 -0800 (PST)
Received: from hu-bcain-lv.qualcomm.com (Global_NAT1.qualcomm.com.
 [129.46.96.20]) by smtp.gmail.com with ESMTPSA id
 d2e1a72fcca58-725deac1daasm9451938b3a.171.2024.12.12.20.18.55
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 12 Dec 2024 20:18:56 -0800 (PST)
From: Brian Cain <brian.cain@oss.qualcomm.com>
To: qemu-devel@nongnu.org
Cc: brian.cain@oss.qualcomm.com, philmd@linaro.org, peter.maydell@linaro.org, 
 quic_mathbern@quicinc.com, ale@rev.ng, anjo@rev.ng,
 quic_mliebel@quicinc.com, ltaylorsimpson@gmail.com,
 Brian Cain <bcain@oss.qualcomm.com>
Subject: [PULL 4/5] target/hexagon: Use argparse in all python scripts
Date: Thu, 12 Dec 2024 20:18:35 -0800
Message-Id: <20241213041836.39986-5-brian.cain@oss.qualcomm.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241213041836.39986-1-brian.cain@oss.qualcomm.com>
References: <20241213041836.39986-1-brian.cain@oss.qualcomm.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
X-Proofpoint-ORIG-GUID: BlKl96_V7_KD_Yfn5OL0swswcEsOrxKs
X-Proofpoint-GUID: BlKl96_V7_KD_Yfn5OL0swswcEsOrxKs
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.293,Aquarius:18.0.1039,Hydra:6.0.680,FMLib:17.12.60.29
 definitions=2024-09-06_09,2024-09-06_01,2024-09-02_01
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 impostorscore=0 bulkscore=0
 suspectscore=0 priorityscore=1501 adultscore=0 mlxlogscore=999
 clxscore=1015 spamscore=0 mlxscore=0 lowpriorityscore=0 phishscore=0
 malwarescore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.19.0-2411120000 definitions=main-2412130030
Received-SPF: pass client-ip=205.220.180.131;
 envelope-from=brian.cain@oss.qualcomm.com; helo=mx0b-0031df01.pphosted.com
X-Spam_score_int: -26
X-Spam_score: -2.7
X-Spam_bar: --
X-Spam_report: (-2.7 / 5.0 requ) BAYES_00=-1.9, DKIM_SIGNED=0.1,
 DKIM_VALID=-0.1, DKIM_VALID_EF=-0.1, RCVD_IN_DNSWL_LOW=-0.7,
 RCVD_IN_VALIDITY_RPBL_BLOCKED=0.001, RCVD_IN_VALIDITY_SAFE_BLOCKED=0.001,
 SPF_HELO_NONE=0.001, SPF_PASS=-0.001 autolearn=ham autolearn_force=no
X-Spam_action: no action
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <https://lists.nongnu.org/archive/html/qemu-devel>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
 <mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org
Sender: qemu-devel-bounces+lists+qemu-devel=lfdr.de@nongnu.org

RnJvbTogQW50b24gSm9oYW5zc29uIDxhbmpvQHJldi5uZz4KClFPTCBjb21taXQsIGFsbCB0aGUg
dmFyaW91cyBnZW5fKiBweXRob24gc2NyaXB0cyB0YWtlIGEgbGFyZ2Ugc2V0CmFyZ3VtZW50cyB3
aGVyZSBvcmRlciBpcyBpbXBsaWNpdC4gIFVzaW5nIGFyZ3BhcnNlIHdlIGFsc28gZ2V0IGRlY2Vu
dAplcnJvciBtZXNzYWdlcyBpZiBhIGZpZWxkIGlzIG1pc3Npbmcgb3IgdG9vIG1hbnkgYXJlIGFk
ZGVkLgoKU2lnbmVkLW9mZi1ieTogQW50b24gSm9oYW5zc29uIDxhbmpvQHJldi5uZz4KUmV2aWV3
ZWQtYnk6IEJyaWFuIENhaW4gPGJyaWFuLmNhaW5Ab3NzLnF1YWxjb21tLmNvbT4KU2lnbmVkLW9m
Zi1ieTogQnJpYW4gQ2FpbiA8YnJpYW4uY2FpbkBvc3MucXVhbGNvbW0uY29tPgotLS0KIHRhcmdl
dC9oZXhhZ29uL2dlbl9hbmFseXplX2Z1bmNzLnB5ICAgICB8ICA2ICsrKy0tCiB0YXJnZXQvaGV4
YWdvbi9nZW5fZGVjb2RldHJlZS5weSAgICAgICAgfCAxOSArKysrKysrKysrKy0tLQogdGFyZ2V0
L2hleGFnb24vZ2VuX2hlbHBlcl9mdW5jcy5weSAgICAgIHwgIDcgKysrLS0tCiB0YXJnZXQvaGV4
YWdvbi9nZW5faGVscGVyX3Byb3Rvcy5weSAgICAgfCAgNyArKystLS0KIHRhcmdldC9oZXhhZ29u
L2dlbl9pZGVmX3BhcnNlcl9mdW5jcy5weSB8IDExICsrKysrKystLQogdGFyZ2V0L2hleGFnb24v
Z2VuX29wX2F0dHJpYnMucHkgICAgICAgIHwgMTEgKysrKysrKy0tCiB0YXJnZXQvaGV4YWdvbi9n
ZW5fb3Bjb2Rlc19kZWYucHkgICAgICAgfCAxMSArKysrKysrLS0KIHRhcmdldC9oZXhhZ29uL2dl
bl9wcmludGluc24ucHkgICAgICAgICB8IDExICsrKysrKystLQogdGFyZ2V0L2hleGFnb24vZ2Vu
X3RjZ19mdW5jX3RhYmxlLnB5ICAgIHwgMTEgKysrKysrKy0tCiB0YXJnZXQvaGV4YWdvbi9nZW5f
dGNnX2Z1bmNzLnB5ICAgICAgICAgfCAgOSArKysrLS0tCiB0YXJnZXQvaGV4YWdvbi9nZW5fdHJh
bnNfZnVuY3MucHkgICAgICAgfCAxOCArKysrKysrKysrKy0tLQogdGFyZ2V0L2hleGFnb24vaGV4
X2NvbW1vbi5weSAgICAgICAgICAgIHwgMzMgKysrKysrKysrKysrLS0tLS0tLS0tLS0tLQogdGFy
Z2V0L2hleGFnb24vbWVzb24uYnVpbGQgICAgICAgICAgICAgIHwgIDIgKy0KIDEzIGZpbGVzIGNo
YW5nZWQsIDEwOSBpbnNlcnRpb25zKCspLCA0NyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS90
YXJnZXQvaGV4YWdvbi9nZW5fYW5hbHl6ZV9mdW5jcy5weSBiL3RhcmdldC9oZXhhZ29uL2dlbl9h
bmFseXplX2Z1bmNzLnB5CmluZGV4IDU0YmFjMTk3MjQuLjNhYzdjYzJjZmUgMTAwNzU1Ci0tLSBh
L3RhcmdldC9oZXhhZ29uL2dlbl9hbmFseXplX2Z1bmNzLnB5CisrKyBiL3RhcmdldC9oZXhhZ29u
L2dlbl9hbmFseXplX2Z1bmNzLnB5CkBAIC03OCwxMSArNzgsMTMgQEAgZGVmIGdlbl9hbmFseXpl
X2Z1bmMoZiwgdGFnLCByZWdzLCBpbW1zKToKIAogCiBkZWYgbWFpbigpOgotICAgIGhleF9jb21t
b24ucmVhZF9jb21tb25fZmlsZXMoKQorICAgIGFyZ3MgPSBoZXhfY29tbW9uLnBhcnNlX2NvbW1v
bl9hcmdzKAorICAgICAgICAiRW1pdCBmdW5jdGlvbnMgYW5hbHl6aW5nIHJlZ2lzdGVyIGFjY2Vz
c2VzIgorICAgICkKICAgICB0YWdyZWdzID0gaGV4X2NvbW1vbi5nZXRfdGFncmVncygpCiAgICAg
dGFnaW1tcyA9IGhleF9jb21tb24uZ2V0X3RhZ2ltbXMoKQogCi0gICAgd2l0aCBvcGVuKHN5cy5h
cmd2Wy0xXSwgInciKSBhcyBmOgorICAgIHdpdGggb3BlbihhcmdzLm91dCwgInciKSBhcyBmOgog
ICAgICAgICBmLndyaXRlKCIjaWZuZGVmIEhFWEFHT05fQU5BTFlaRV9GVU5DU19DX0lOQ1xuIikK
ICAgICAgICAgZi53cml0ZSgiI2RlZmluZSBIRVhBR09OX0FOQUxZWkVfRlVOQ1NfQ19JTkNcblxu
IikKIApkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vZ2VuX2RlY29kZXRyZWUucHkgYi90YXJn
ZXQvaGV4YWdvbi9nZW5fZGVjb2RldHJlZS5weQppbmRleCBhNGZjZDYyMmM1Li5jZTcwM2FmNDFk
IDEwMDc1NQotLS0gYS90YXJnZXQvaGV4YWdvbi9nZW5fZGVjb2RldHJlZS5weQorKysgYi90YXJn
ZXQvaGV4YWdvbi9nZW5fZGVjb2RldHJlZS5weQpAQCAtMjQsNiArMjQsNyBAQAogaW1wb3J0IHRl
eHR3cmFwCiBpbXBvcnQgaXNldAogaW1wb3J0IGhleF9jb21tb24KK2ltcG9ydCBhcmdwYXJzZQog
CiBlbmNzID0gewogICAgIHRhZzogIiIuam9pbihyZXZlcnNlZChpc2V0LmlzZXRbdGFnXVsiZW5j
Il0ucmVwbGFjZSgiICIsICIiKSkpCkBAIC0xOTEsOCArMTkyLDE4IEBAIGRlZiBnZW5fZGVjb2Rl
dHJlZV9maWxlKGYsIGNsYXNzX3RvX2RlY29kZSk6CiAgICAgICAgIGYud3JpdGUoZiJ7dGFnfVx0
e2VuY19zdHJ9IEB7dGFnfVxuIikKIAogCitkZWYgbWFpbigpOgorICAgIHBhcnNlciA9IGFyZ3Bh
cnNlLkFyZ3VtZW50UGFyc2VyKAorICAgICAgICBkZXNjcmlwdGlvbj0iRW1pdCBvcGFxdWUgbWFj
cm8gY2FsbHMgd2l0aCBpbnN0cnVjdGlvbiBzZW1hbnRpY3MiCisgICAgKQorICAgIHBhcnNlci5h
ZGRfYXJndW1lbnQoInNlbWFudGljcyIsIGhlbHA9InNlbWFudGljcyBmaWxlIikKKyAgICBwYXJz
ZXIuYWRkX2FyZ3VtZW50KCJjbGFzc190b19kZWNvZGUiLCBoZWxwPSJpbnN0cnVjdGlvbiBjbGFz
cyB0byBkZWNvZGUiKQorICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIm91dCIsIGhlbHA9Im91dHB1
dCBmaWxlIikKKyAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQorCisgICAgaGV4X2NvbW1v
bi5yZWFkX3NlbWFudGljc19maWxlKGFyZ3Muc2VtYW50aWNzKQorICAgIHdpdGggb3Blbihhcmdz
Lm91dCwgInciKSBhcyBmOgorICAgICAgICBnZW5fZGVjb2RldHJlZV9maWxlKGYsIGFyZ3MuY2xh
c3NfdG9fZGVjb2RlKQorCiBpZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgotICAgIGhleF9jb21t
b24ucmVhZF9zZW1hbnRpY3NfZmlsZShzeXMuYXJndlsxXSkKLSAgICBjbGFzc190b19kZWNvZGUg
PSBzeXMuYXJndlsyXQotICAgIHdpdGggb3BlbihzeXMuYXJndlszXSwgInciKSBhcyBmOgotICAg
ICAgICBnZW5fZGVjb2RldHJlZV9maWxlKGYsIGNsYXNzX3RvX2RlY29kZSkKKyAgICBtYWluKCkK
ZGlmZiAtLWdpdCBhL3RhcmdldC9oZXhhZ29uL2dlbl9oZWxwZXJfZnVuY3MucHkgYi90YXJnZXQv
aGV4YWdvbi9nZW5faGVscGVyX2Z1bmNzLnB5CmluZGV4IGU5Njg1YmZmMmYuLmMxZjgwNmFjNGIg
MTAwNzU1Ci0tLSBhL3RhcmdldC9oZXhhZ29uL2dlbl9oZWxwZXJfZnVuY3MucHkKKysrIGIvdGFy
Z2V0L2hleGFnb24vZ2VuX2hlbHBlcl9mdW5jcy5weQpAQCAtMTAyLDEyICsxMDIsMTMgQEAgZGVm
IGdlbl9oZWxwZXJfZnVuY3Rpb24oZiwgdGFnLCB0YWdyZWdzLCB0YWdpbW1zKToKIAogCiBkZWYg
bWFpbigpOgotICAgIGhleF9jb21tb24ucmVhZF9jb21tb25fZmlsZXMoKQorICAgIGFyZ3MgPSBo
ZXhfY29tbW9uLnBhcnNlX2NvbW1vbl9hcmdzKAorICAgICAgICAiRW1pdCBoZWxwZXIgZnVuY3Rp
b24gZGVmaW5pdGlvbnMgZm9yIGVhY2ggaW5zdHJ1Y3Rpb24iCisgICAgKQogICAgIHRhZ3JlZ3Mg
PSBoZXhfY29tbW9uLmdldF90YWdyZWdzKCkKICAgICB0YWdpbW1zID0gaGV4X2NvbW1vbi5nZXRf
dGFnaW1tcygpCiAKLSAgICBvdXRwdXRfZmlsZSA9IHN5cy5hcmd2Wy0xXQotICAgIHdpdGggb3Bl
bihvdXRwdXRfZmlsZSwgInciKSBhcyBmOgorICAgIHdpdGggb3BlbihhcmdzLm91dCwgInciKSBh
cyBmOgogICAgICAgICBmb3IgdGFnIGluIGhleF9jb21tb24udGFnczoKICAgICAgICAgICAgICMj
IFNraXAgdGhlIHByaXYgaW5zdHJ1Y3Rpb25zCiAgICAgICAgICAgICBpZiAiQV9QUklWIiBpbiBo
ZXhfY29tbW9uLmF0dHJpYmRpY3RbdGFnXToKZGlmZiAtLWdpdCBhL3RhcmdldC9oZXhhZ29uL2dl
bl9oZWxwZXJfcHJvdG9zLnB5IGIvdGFyZ2V0L2hleGFnb24vZ2VuX2hlbHBlcl9wcm90b3MucHkK
aW5kZXggZmQyYmZkMGYzNi4uNzdmOGUwYTZhMyAxMDA3NTUKLS0tIGEvdGFyZ2V0L2hleGFnb24v
Z2VuX2hlbHBlcl9wcm90b3MucHkKKysrIGIvdGFyZ2V0L2hleGFnb24vZ2VuX2hlbHBlcl9wcm90
b3MucHkKQEAgLTUyLDEyICs1MiwxMyBAQCBkZWYgZ2VuX2hlbHBlcl9wcm90b3R5cGUoZiwgdGFn
LCB0YWdyZWdzLCB0YWdpbW1zKToKIAogCiBkZWYgbWFpbigpOgotICAgIGhleF9jb21tb24ucmVh
ZF9jb21tb25fZmlsZXMoKQorICAgIGFyZ3MgPSBoZXhfY29tbW9uLnBhcnNlX2NvbW1vbl9hcmdz
KAorICAgICAgICAiRW1pdCBoZWxwZXIgZnVuY3Rpb24gcHJvdG90eXBlcyBmb3IgZWFjaCBpbnN0
cnVjdGlvbiIKKyAgICApCiAgICAgdGFncmVncyA9IGhleF9jb21tb24uZ2V0X3RhZ3JlZ3MoKQog
ICAgIHRhZ2ltbXMgPSBoZXhfY29tbW9uLmdldF90YWdpbW1zKCkKIAotICAgIG91dHB1dF9maWxl
ID0gc3lzLmFyZ3ZbLTFdCi0gICAgd2l0aCBvcGVuKG91dHB1dF9maWxlLCAidyIpIGFzIGY6Cisg
ICAgd2l0aCBvcGVuKGFyZ3Mub3V0LCAidyIpIGFzIGY6CiAgICAgICAgIGZvciB0YWcgaW4gaGV4
X2NvbW1vbi50YWdzOgogICAgICAgICAgICAgIyMgU2tpcCB0aGUgcHJpdiBpbnN0cnVjdGlvbnMK
ICAgICAgICAgICAgIGlmICJBX1BSSVYiIGluIGhleF9jb21tb24uYXR0cmliZGljdFt0YWddOgpk
aWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vZ2VuX2lkZWZfcGFyc2VyX2Z1bmNzLnB5IGIvdGFy
Z2V0L2hleGFnb24vZ2VuX2lkZWZfcGFyc2VyX2Z1bmNzLnB5CmluZGV4IDcyZjExYzY4Y2EuLjJm
NmU4MjZmNzYgMTAwNjQ0Ci0tLSBhL3RhcmdldC9oZXhhZ29uL2dlbl9pZGVmX3BhcnNlcl9mdW5j
cy5weQorKysgYi90YXJnZXQvaGV4YWdvbi9nZW5faWRlZl9wYXJzZXJfZnVuY3MucHkKQEAgLTIw
LDYgKzIwLDcgQEAKIGltcG9ydCBzeXMKIGltcG9ydCByZQogaW1wb3J0IHN0cmluZworaW1wb3J0
IGFyZ3BhcnNlCiBmcm9tIGlvIGltcG9ydCBTdHJpbmdJTwogCiBpbXBvcnQgaGV4X2NvbW1vbgpA
QCAtNDMsMTMgKzQ0LDE5IEBACiAjIyB0aGVtIGFyZSBpbnB1dHMgKCJpbiIgcHJlZml4KSwgd2hp
bGUgc29tZSBvdGhlcnMgYXJlIG91dHB1dHMuCiAjIwogZGVmIG1haW4oKToKLSAgICBoZXhfY29t
bW9uLnJlYWRfc2VtYW50aWNzX2ZpbGUoc3lzLmFyZ3ZbMV0pCisgICAgcGFyc2VyID0gYXJncGFy
c2UuQXJndW1lbnRQYXJzZXIoCisgICAgICAgICJFbWl0IGluc3RydWN0aW9uIGltcGxlbWVudGF0
aW9ucyB0aGF0IGNhbiBiZSBmZWQgdG8gaWRlZi1wYXJzZXIiCisgICAgKQorICAgIHBhcnNlci5h
ZGRfYXJndW1lbnQoInNlbWFudGljcyIsIGhlbHA9InNlbWFudGljcyBmaWxlIikKKyAgICBwYXJz
ZXIuYWRkX2FyZ3VtZW50KCJvdXQiLCBoZWxwPSJvdXRwdXQgZmlsZSIpCisgICAgYXJncyA9IHBh
cnNlci5wYXJzZV9hcmdzKCkKKyAgICBoZXhfY29tbW9uLnJlYWRfc2VtYW50aWNzX2ZpbGUoYXJn
cy5zZW1hbnRpY3MpCiAgICAgaGV4X2NvbW1vbi5jYWxjdWxhdGVfYXR0cmlicygpCiAgICAgaGV4
X2NvbW1vbi5pbml0X3JlZ2lzdGVycygpCiAgICAgdGFncmVncyA9IGhleF9jb21tb24uZ2V0X3Rh
Z3JlZ3MoKQogICAgIHRhZ2ltbXMgPSBoZXhfY29tbW9uLmdldF90YWdpbW1zKCkKIAotICAgIHdp
dGggb3BlbihzeXMuYXJndlstMV0sICJ3IikgYXMgZjoKKyAgICB3aXRoIG9wZW4oYXJncy5vdXQs
ICJ3IikgYXMgZjoKICAgICAgICAgZi53cml0ZSgnI2luY2x1ZGUgIm1hY3Jvcy5oLmluYyJcblxu
JykKIAogICAgICAgICBmb3IgdGFnIGluIGhleF9jb21tb24udGFnczoKZGlmZiAtLWdpdCBhL3Rh
cmdldC9oZXhhZ29uL2dlbl9vcF9hdHRyaWJzLnB5IGIvdGFyZ2V0L2hleGFnb24vZ2VuX29wX2F0
dHJpYnMucHkKaW5kZXggOTk0NDgyMjBkYS4uYmJiYjAyZGYzYSAxMDA3NTUKLS0tIGEvdGFyZ2V0
L2hleGFnb24vZ2VuX29wX2F0dHJpYnMucHkKKysrIGIvdGFyZ2V0L2hleGFnb24vZ2VuX29wX2F0
dHJpYnMucHkKQEAgLTIxLDE2ICsyMSwyMyBAQAogaW1wb3J0IHJlCiBpbXBvcnQgc3RyaW5nCiBp
bXBvcnQgaGV4X2NvbW1vbgoraW1wb3J0IGFyZ3BhcnNlCiAKIAogZGVmIG1haW4oKToKLSAgICBo
ZXhfY29tbW9uLnJlYWRfc2VtYW50aWNzX2ZpbGUoc3lzLmFyZ3ZbMV0pCisgICAgcGFyc2VyID0g
YXJncGFyc2UuQXJndW1lbnRQYXJzZXIoCisgICAgICAgICJFbWl0IG9wYXF1ZSBtYWNybyBjYWxs
cyBjb250YWluaW5nIGluc3RydWN0aW9uIGF0dHJpYnV0ZXMiCisgICAgKQorICAgIHBhcnNlci5h
ZGRfYXJndW1lbnQoInNlbWFudGljcyIsIGhlbHA9InNlbWFudGljcyBmaWxlIikKKyAgICBwYXJz
ZXIuYWRkX2FyZ3VtZW50KCJvdXQiLCBoZWxwPSJvdXRwdXQgZmlsZSIpCisgICAgYXJncyA9IHBh
cnNlci5wYXJzZV9hcmdzKCkKKyAgICBoZXhfY29tbW9uLnJlYWRfc2VtYW50aWNzX2ZpbGUoYXJn
cy5zZW1hbnRpY3MpCiAgICAgaGV4X2NvbW1vbi5jYWxjdWxhdGVfYXR0cmlicygpCiAKICAgICAj
IwogICAgICMjICAgICBHZW5lcmF0ZSBhbGwgdGhlIGF0dHJpYnV0ZXMgYXNzb2NpYXRlZCB3aXRo
IGVhY2ggaW5zdHJ1Y3Rpb24KICAgICAjIwotICAgIHdpdGggb3BlbihzeXMuYXJndlstMV0sICJ3
IikgYXMgZjoKKyAgICB3aXRoIG9wZW4oYXJncy5vdXQsICJ3IikgYXMgZjoKICAgICAgICAgZm9y
IHRhZyBpbiBoZXhfY29tbW9uLnRhZ3M6CiAgICAgICAgICAgICBmLndyaXRlKAogICAgICAgICAg
ICAgICAgIGYiT1BfQVRUUklCKHt0YWd9LEFUVFJJQlMoIgpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hl
eGFnb24vZ2VuX29wY29kZXNfZGVmLnB5IGIvdGFyZ2V0L2hleGFnb24vZ2VuX29wY29kZXNfZGVm
LnB5CmluZGV4IDUzNmYwZWI2OGEuLjk0YTE5ZmY0MTIgMTAwNzU1Ci0tLSBhL3RhcmdldC9oZXhh
Z29uL2dlbl9vcGNvZGVzX2RlZi5weQorKysgYi90YXJnZXQvaGV4YWdvbi9nZW5fb3Bjb2Rlc19k
ZWYucHkKQEAgLTIxLDE1ICsyMSwyMiBAQAogaW1wb3J0IHJlCiBpbXBvcnQgc3RyaW5nCiBpbXBv
cnQgaGV4X2NvbW1vbgoraW1wb3J0IGFyZ3BhcnNlCiAKIAogZGVmIG1haW4oKToKLSAgICBoZXhf
Y29tbW9uLnJlYWRfc2VtYW50aWNzX2ZpbGUoc3lzLmFyZ3ZbMV0pCisgICAgcGFyc2VyID0gYXJn
cGFyc2UuQXJndW1lbnRQYXJzZXIoCisgICAgICAgIGRlc2NyaXB0aW9uPSJFbWl0IG9wYXF1ZSBt
YWNybyBjYWxscyB3aXRoIGluc3RydWN0aW9uIG5hbWVzIgorICAgICkKKyAgICBwYXJzZXIuYWRk
X2FyZ3VtZW50KCJzZW1hbnRpY3MiLCBoZWxwPSJzZW1hbnRpY3MgZmlsZSIpCisgICAgcGFyc2Vy
LmFkZF9hcmd1bWVudCgib3V0IiwgaGVscD0ib3V0cHV0IGZpbGUiKQorICAgIGFyZ3MgPSBwYXJz
ZXIucGFyc2VfYXJncygpCisgICAgaGV4X2NvbW1vbi5yZWFkX3NlbWFudGljc19maWxlKGFyZ3Mu
c2VtYW50aWNzKQogCiAgICAgIyMKICAgICAjIyAgICAgR2VuZXJhdGUgYSBsaXN0IG9mIGFsbCB0
aGUgb3Bjb2RlcwogICAgICMjCi0gICAgd2l0aCBvcGVuKHN5cy5hcmd2Wy0xXSwgInciKSBhcyBm
OgorICAgIHdpdGggb3BlbihhcmdzLm91dCwgInciKSBhcyBmOgogICAgICAgICBmb3IgdGFnIGlu
IGhleF9jb21tb24udGFnczoKICAgICAgICAgICAgIGYud3JpdGUoZiJPUENPREUoe3RhZ30pLFxu
IikKIApkaWZmIC0tZ2l0IGEvdGFyZ2V0L2hleGFnb24vZ2VuX3ByaW50aW5zbi5weSBiL3Rhcmdl
dC9oZXhhZ29uL2dlbl9wcmludGluc24ucHkKaW5kZXggOGJmNGQwOTg1Yy4uZDVmOTY5OTYwYSAx
MDA3NTUKLS0tIGEvdGFyZ2V0L2hleGFnb24vZ2VuX3ByaW50aW5zbi5weQorKysgYi90YXJnZXQv
aGV4YWdvbi9nZW5fcHJpbnRpbnNuLnB5CkBAIC0yMSw2ICsyMSw3IEBACiBpbXBvcnQgcmUKIGlt
cG9ydCBzdHJpbmcKIGltcG9ydCBoZXhfY29tbW9uCitpbXBvcnQgYXJncGFyc2UKIAogCiAjIwpA
QCAtOTYsMTEgKzk3LDE3IEBAIGRlZiBzcGFjaWZ5KHMpOgogCiAKIGRlZiBtYWluKCk6Ci0gICAg
aGV4X2NvbW1vbi5yZWFkX3NlbWFudGljc19maWxlKHN5cy5hcmd2WzFdKQorICAgIHBhcnNlciA9
IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKAorICAgICAgICAiRW1pdCBvcGFxdWUgbWFjcm8gY2Fs
bHMgd2l0aCBpbmZvcm1hdGlvbiBmb3IgcHJpbnRpbmcgc3RyaW5nIHJlcHJlc2VudGF0aW9ucyBv
ZiBpbnN0cnVjaW9ucyIKKyAgICApCisgICAgcGFyc2VyLmFkZF9hcmd1bWVudCgic2VtYW50aWNz
IiwgaGVscD0ic2VtYW50aWNzIGZpbGUiKQorICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIm91dCIs
IGhlbHA9Im91dHB1dCBmaWxlIikKKyAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQorICAg
IGhleF9jb21tb24ucmVhZF9zZW1hbnRpY3NfZmlsZShhcmdzLnNlbWFudGljcykKIAogICAgIGlt
bWV4dF9jYXNlcmUgPSByZS5jb21waWxlKHIiSU1NRVhUXCgoW0EtWmEtel0pIikKIAotICAgIHdp
dGggb3BlbihzeXMuYXJndlstMV0sICJ3IikgYXMgZjoKKyAgICB3aXRoIG9wZW4oYXJncy5vdXQs
ICJ3IikgYXMgZjoKICAgICAgICAgZm9yIHRhZyBpbiBoZXhfY29tbW9uLnRhZ3M6CiAgICAgICAg
ICAgICBpZiBub3QgaGV4X2NvbW1vbi5iZWhkaWN0W3RhZ106CiAgICAgICAgICAgICAgICAgY29u
dGludWUKZGlmZiAtLWdpdCBhL3RhcmdldC9oZXhhZ29uL2dlbl90Y2dfZnVuY190YWJsZS5weSBi
L3RhcmdldC9oZXhhZ29uL2dlbl90Y2dfZnVuY190YWJsZS5weQppbmRleCA5NzhhYzE4MTliLi4y
OTlhMzliMWFhIDEwMDc1NQotLS0gYS90YXJnZXQvaGV4YWdvbi9nZW5fdGNnX2Z1bmNfdGFibGUu
cHkKKysrIGIvdGFyZ2V0L2hleGFnb24vZ2VuX3RjZ19mdW5jX3RhYmxlLnB5CkBAIC0yMSwxNSAr
MjEsMjIgQEAKIGltcG9ydCByZQogaW1wb3J0IHN0cmluZwogaW1wb3J0IGhleF9jb21tb24KK2lt
cG9ydCBhcmdwYXJzZQogCiAKIGRlZiBtYWluKCk6Ci0gICAgaGV4X2NvbW1vbi5yZWFkX3NlbWFu
dGljc19maWxlKHN5cy5hcmd2WzFdKQorICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFy
c2VyKAorICAgICAgICAiRW1pdCBvcGFxdWUgbWFjcm8gY2FsbHMgd2l0aCBpbnN0cnVjdGlvbiBz
ZW1hbnRpY3MiCisgICAgKQorICAgIHBhcnNlci5hZGRfYXJndW1lbnQoInNlbWFudGljcyIsIGhl
bHA9InNlbWFudGljcyBmaWxlIikKKyAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCJvdXQiLCBoZWxw
PSJvdXRwdXQgZmlsZSIpCisgICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKKyAgICBoZXhf
Y29tbW9uLnJlYWRfc2VtYW50aWNzX2ZpbGUoYXJncy5zZW1hbnRpY3MpCiAgICAgaGV4X2NvbW1v
bi5jYWxjdWxhdGVfYXR0cmlicygpCiAgICAgdGFncmVncyA9IGhleF9jb21tb24uZ2V0X3RhZ3Jl
Z3MoKQogICAgIHRhZ2ltbXMgPSBoZXhfY29tbW9uLmdldF90YWdpbW1zKCkKIAotICAgIHdpdGgg
b3BlbihzeXMuYXJndlstMV0sICJ3IikgYXMgZjoKKyAgICB3aXRoIG9wZW4oYXJncy5vdXQsICJ3
IikgYXMgZjoKICAgICAgICAgZi53cml0ZSgiI2lmbmRlZiBIRVhBR09OX0ZVTkNfVEFCTEVfSFxu
IikKICAgICAgICAgZi53cml0ZSgiI2RlZmluZSBIRVhBR09OX0ZVTkNfVEFCTEVfSFxuXG4iKQog
CmRpZmYgLS1naXQgYS90YXJnZXQvaGV4YWdvbi9nZW5fdGNnX2Z1bmNzLnB5IGIvdGFyZ2V0L2hl
eGFnb24vZ2VuX3RjZ19mdW5jcy5weQppbmRleCAwNWFhMGE3ODU1Li5jMmJhOTFkZGMwIDEwMDc1
NQotLS0gYS90YXJnZXQvaGV4YWdvbi9nZW5fdGNnX2Z1bmNzLnB5CisrKyBiL3RhcmdldC9oZXhh
Z29uL2dlbl90Y2dfZnVuY3MucHkKQEAgLTEwOCwxNSArMTA4LDE2IEBAIGRlZiBnZW5fZGVmX3Rj
Z19mdW5jKGYsIHRhZywgdGFncmVncywgdGFnaW1tcyk6CiAKIAogZGVmIG1haW4oKToKLSAgICBp
c19pZGVmX3BhcnNlcl9lbmFibGVkID0gaGV4X2NvbW1vbi5yZWFkX2NvbW1vbl9maWxlcygpCisg
ICAgYXJncyA9IGhleF9jb21tb24ucGFyc2VfY29tbW9uX2FyZ3MoCisgICAgICAgICJFbWl0IGZ1
bmN0aW9ucyBjYWxsaW5nIGdlbmVyYXRlZCBjb2RlIGltcGxlbWVudGluZyBpbnN0cnVjdGlvbiBz
ZW1hbnRpY3MgKGhlbHBlcnMsIGlkZWYtcGFyc2VyKSIKKyAgICApCiAgICAgdGFncmVncyA9IGhl
eF9jb21tb24uZ2V0X3RhZ3JlZ3MoKQogICAgIHRhZ2ltbXMgPSBoZXhfY29tbW9uLmdldF90YWdp
bW1zKCkKIAotICAgIG91dHB1dF9maWxlID0gc3lzLmFyZ3ZbLTFdCi0gICAgd2l0aCBvcGVuKG91
dHB1dF9maWxlLCAidyIpIGFzIGY6CisgICAgd2l0aCBvcGVuKGFyZ3Mub3V0LCAidyIpIGFzIGY6
CiAgICAgICAgIGYud3JpdGUoIiNpZm5kZWYgSEVYQUdPTl9UQ0dfRlVOQ1NfSFxuIikKICAgICAg
ICAgZi53cml0ZSgiI2RlZmluZSBIRVhBR09OX1RDR19GVU5DU19IXG5cbiIpCi0gICAgICAgIGlm
IGlzX2lkZWZfcGFyc2VyX2VuYWJsZWQ6CisgICAgICAgIGlmIGFyZ3MuaWRlZl9wYXJzZXI6CiAg
ICAgICAgICAgICBmLndyaXRlKCcjaW5jbHVkZSAiaWRlZi1nZW5lcmF0ZWQtZW1pdHRlci5oLmlu
YyJcblxuJykKIAogICAgICAgICBmb3IgdGFnIGluIGhleF9jb21tb24udGFnczoKZGlmZiAtLWdp
dCBhL3RhcmdldC9oZXhhZ29uL2dlbl90cmFuc19mdW5jcy5weSBiL3RhcmdldC9oZXhhZ29uL2dl
bl90cmFuc19mdW5jcy5weQppbmRleCAzMGYwYzczZTBjLi40NWRhMWI3YjVkIDEwMDc1NQotLS0g
YS90YXJnZXQvaGV4YWdvbi9nZW5fdHJhbnNfZnVuY3MucHkKKysrIGIvdGFyZ2V0L2hleGFnb24v
Z2VuX3RyYW5zX2Z1bmNzLnB5CkBAIC0yNCw2ICsyNCw3IEBACiBpbXBvcnQgdGV4dHdyYXAKIGlt
cG9ydCBpc2V0CiBpbXBvcnQgaGV4X2NvbW1vbgoraW1wb3J0IGFyZ3BhcnNlCiAKIGVuY3MgPSB7
CiAgICAgdGFnOiAiIi5qb2luKHJldmVyc2VkKGlzZXQuaXNldFt0YWddWyJlbmMiXS5yZXBsYWNl
KCIgIiwgIiIpKSkKQEAgLTEzNiw4ICsxMzcsMTkgQEAgZGVmIGdlbl90cmFuc19mdW5jcyhmKToK
ICAgICAgICAgIiIiKSkKIAogCi1pZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgotICAgIGhleF9j
b21tb24ucmVhZF9zZW1hbnRpY3NfZmlsZShzeXMuYXJndlsxXSkKK2RlZiBtYWluKCk6CisgICAg
cGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoCisgICAgICAgIGRlc2NyaXB0aW9uPSJF
bWl0IHRyYW5zXyooKSBmdW5jdGlvbnMgdG8gYmUgY2FsbGVkIGJ5ICIgXAorICAgICAgICAgICAg
ICAgICAgICAiaW5zdHJ1Y3Rpb24gZGVjb2RlciIKKyAgICApCisgICAgcGFyc2VyLmFkZF9hcmd1
bWVudCgic2VtYW50aWNzIiwgaGVscD0ic2VtYW50aWNzIGZpbGUiKQorICAgIHBhcnNlci5hZGRf
YXJndW1lbnQoIm91dCIsIGhlbHA9Im91dHB1dCBmaWxlIikKKyAgICBhcmdzID0gcGFyc2VyLnBh
cnNlX2FyZ3MoKQorICAgIGhleF9jb21tb24ucmVhZF9zZW1hbnRpY3NfZmlsZShhcmdzLnNlbWFu
dGljcykKICAgICBoZXhfY29tbW9uLmluaXRfcmVnaXN0ZXJzKCkKLSAgICB3aXRoIG9wZW4oc3lz
LmFyZ3ZbMl0sICJ3IikgYXMgZjoKKyAgICB3aXRoIG9wZW4oYXJncy5vdXQsICJ3IikgYXMgZjoK
ICAgICAgICAgZ2VuX3RyYW5zX2Z1bmNzKGYpCisKKworaWYgX19uYW1lX18gPT0gIl9fbWFpbl9f
IjoKKyAgICBtYWluKCkKZGlmZiAtLWdpdCBhL3RhcmdldC9oZXhhZ29uL2hleF9jb21tb24ucHkg
Yi90YXJnZXQvaGV4YWdvbi9oZXhfY29tbW9uLnB5CmluZGV4IDE1ZWQ0OTgwZTQuLjc1OGU1ZmQx
MmQgMTAwNzU1Ci0tLSBhL3RhcmdldC9oZXhhZ29uL2hleF9jb21tb24ucHkKKysrIGIvdGFyZ2V0
L2hleGFnb24vaGV4X2NvbW1vbi5weQpAQCAtMjEsNiArMjEsNyBAQAogaW1wb3J0IHJlCiBpbXBv
cnQgc3RyaW5nCiBpbXBvcnQgdGV4dHdyYXAKK2ltcG9ydCBhcmdwYXJzZQogCiBiZWhkaWN0ID0g
e30gICMgdGFnIC0+YmVoYXZpb3IKIHNlbWRpY3QgPSB7fSAgIyB0YWcgLT4gc2VtYW50aWNzCkBA
IC0xMTgxLDIyICsxMTgyLDIwIEBAIGRlZiBoZWxwZXJfYXJncyh0YWcsIHJlZ3MsIGltbXMpOgog
ICAgIHJldHVybiBhcmdzCiAKIAotZGVmIHJlYWRfY29tbW9uX2ZpbGVzKCk6Ci0gICAgcmVhZF9z
ZW1hbnRpY3NfZmlsZShzeXMuYXJndlsxXSkKLSAgICByZWFkX292ZXJyaWRlc19maWxlKHN5cy5h
cmd2WzJdKQotICAgIHJlYWRfb3ZlcnJpZGVzX2ZpbGUoc3lzLmFyZ3ZbM10pCi0gICAgIyMgV2hl
dGhlciBvciBub3QgaWRlZi1wYXJzZXIgaXMgZW5hYmxlZCBpcwotICAgICMjIGRldGVybWluZWQg
YnkgdGhlIG51bWJlciBvZiBhcmd1bWVudHMgdG8KLSAgICAjIyB0aGlzIHNjcmlwdDoKLSAgICAj
IwotICAgICMjICAgNCBhcmdzLiAtPiBub3QgZW5hYmxlZCwKLSAgICAjIyAgIDUgYXJncy4gLT4g
aWRlZi1wYXJzZXIgZW5hYmxlZC4KLSAgICAjIwotICAgICMjIFRoZSA1OnRoIGFyZy4gdGhlbiBo
b2xkcyBhIGxpc3Qgb2YgdGhlIHN1Y2Nlc3NmdWxseQotICAgICMjIHBhcnNlZCBpbnN0cnVjdGlv
bnMuCi0gICAgaXNfaWRlZl9wYXJzZXJfZW5hYmxlZCA9IGxlbihzeXMuYXJndikgPiA1Ci0gICAg
aWYgaXNfaWRlZl9wYXJzZXJfZW5hYmxlZDoKLSAgICAgICAgcmVhZF9pZGVmX3BhcnNlcl9lbmFi
bGVkX2ZpbGUoc3lzLmFyZ3ZbNF0pCitkZWYgcGFyc2VfY29tbW9uX2FyZ3MoZGVzYyk6CisgICAg
cGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoZGVzYykKKyAgICBwYXJzZXIuYWRkX2Fy
Z3VtZW50KCJzZW1hbnRpY3MiLCBoZWxwPSJzZW1hbnRpY3MgZmlsZSIpCisgICAgcGFyc2VyLmFk
ZF9hcmd1bWVudCgib3ZlcnJpZGVzIiwgaGVscD0ib3ZlcnJpZGVzIGZpbGUiKQorICAgIHBhcnNl
ci5hZGRfYXJndW1lbnQoIm92ZXJyaWRlc192ZWMiLCBoZWxwPSJ2ZWN0b3Igb3ZlcnJpZGVzIGZp
bGUiKQorICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIm91dCIsIGhlbHA9Im91dHB1dCBmaWxlIikK
KyAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWlkZWYtcGFyc2VyIiwKKyAgICAgICAgICAgICAg
ICAgICAgICAgIGhlbHA9ImZpbGUgb2YgaW5zdHJ1Y3Rpb25zIHRyYW5zbGF0ZWQgYnkgaWRlZi1w
YXJzZXIiKQorICAgIGFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCisgICAgcmVhZF9zZW1hbnRp
Y3NfZmlsZShhcmdzLnNlbWFudGljcykKKyAgICByZWFkX292ZXJyaWRlc19maWxlKGFyZ3Mub3Zl
cnJpZGVzKQorICAgIHJlYWRfb3ZlcnJpZGVzX2ZpbGUoYXJncy5vdmVycmlkZXNfdmVjKQorICAg
IGlmIGFyZ3MuaWRlZl9wYXJzZXI6CisgICAgICAgIHJlYWRfaWRlZl9wYXJzZXJfZW5hYmxlZF9m
aWxlKGFyZ3MuaWRlZl9wYXJzZXIpCiAgICAgY2FsY3VsYXRlX2F0dHJpYnMoKQogICAgIGluaXRf
cmVnaXN0ZXJzKCkKLSAgICByZXR1cm4gaXNfaWRlZl9wYXJzZXJfZW5hYmxlZAorICAgIHJldHVy
biBhcmdzCmRpZmYgLS1naXQgYS90YXJnZXQvaGV4YWdvbi9tZXNvbi5idWlsZCBiL3RhcmdldC9o
ZXhhZ29uL21lc29uLmJ1aWxkCmluZGV4IGYxNzIzNzc4YTYuLmJiNGViYWFlODEgMTAwNjQ0Ci0t
LSBhL3RhcmdldC9oZXhhZ29uL21lc29uLmJ1aWxkCisrKyBiL3RhcmdldC9oZXhhZ29uL21lc29u
LmJ1aWxkCkBAIC0zNDYsNyArMzQ2LDcgQEAgaWYgaWRlZl9wYXJzZXJfZW5hYmxlZCBhbmQgJ2hl
eGFnb24tbGludXgtdXNlcicgaW4gdGFyZ2V0X2RpcnMKICAgICAjIFNldHVwIGlucHV0IGFuZCBk
ZXBlbmRlbmNpZXMgZm9yIHRoZSBuZXh0IHN0ZXAsIHRoaXMgZGVwZW5kcyBvbiB3aGV0aGVyIG9y
CiAgICAgIyBub3QgaWRlZi1wYXJzZXIgaXMgZW5hYmxlZAogICAgIGhlbHBlcl9kZXAgPSBbc2Vt
YW50aWNzX2dlbmVyYXRlZCwgaWRlZl9nZW5lcmF0ZWRfdGNnX2MsIGlkZWZfZ2VuZXJhdGVkX3Rj
Z10KLSAgICBoZWxwZXJfaW4gPSBbc2VtYW50aWNzX2dlbmVyYXRlZCwgZ2VuX3RjZ19oLCBnZW5f
dGNnX2h2eF9oLCBpZGVmX2dlbmVyYXRlZF9saXN0XQorICAgIGhlbHBlcl9pbiA9IFtzZW1hbnRp
Y3NfZ2VuZXJhdGVkLCBnZW5fdGNnX2gsIGdlbl90Y2dfaHZ4X2gsICctLWlkZWYtcGFyc2VyJywg
aWRlZl9nZW5lcmF0ZWRfbGlzdF0KIGVsc2UKICAgICAjIFNldHVwIGlucHV0IGFuZCBkZXBlbmRl
bmNpZXMgZm9yIHRoZSBuZXh0IHN0ZXAsIHRoaXMgZGVwZW5kcyBvbiB3aGV0aGVyIG9yCiAgICAg
IyBub3QgaWRlZi1wYXJzZXIgaXMgZW5hYmxlZAotLSAKMi4zNC4xCgo=

